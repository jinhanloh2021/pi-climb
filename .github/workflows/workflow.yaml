name: Docker image build and publish
on:
  push:
    branches:
      - "release/**"

jobs:
  docker:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    env:
      AWS_ACCOUNT_ID: "842832773369"
      AWS_REGION: "ap-southeast-1"
      GITHUB_IAM_ROLE: "pi-climb_github-actions"
      IMAGE_TAG: ${{ github.sha }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials (using OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/${{ env.GITHUB_IAM_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registries: ${{ env.AWS_ACCOUNT_ID }}

      - name: Set ECR Registry Hostname
        shell: bash
        run: echo "ECR_REGISTRY=${{ steps.login-ecr.outputs.registry }}" >> $GITHUB_ENV

      - name: Build, Tag, and Push 'server' image to ECR
        shell: bash
        env:
          ECR_REPOSITORY: pi-climb-dev-server
        run: |
          FULL_IMAGE="$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
          docker build ./server -f ./server/dockerfile -t "$FULL_IMAGE"
          docker push "$FULL_IMAGE"
          echo "Server image pushed to $FULL_IMAGE"

      - name: Build, Tag, and Push 'web' image to ECR
        shell: bash
        env:
          ECR_REPOSITORY: pi-climb-dev-web
        run: |
          FULL_IMAGE="$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
          docker build ./web -f ./web/dockerfile -t "$FULL_IMAGE"
          docker push "$FULL_IMAGE"
          echo "Web image pushed to $FULL_IMAGE"
