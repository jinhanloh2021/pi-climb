# Use the official Go image to build the binary

FROM golang:1.24-alpine AS builder
# Set the working directory inside the container

WORKDIR /app
# Copy the Go module files and download dependencies

COPY go.mod go.sum ./
RUN go mod download
# Copy the rest of the source code

COPY . .
# Build the Go application binary for production

RUN CGO_ENABLED=0 GOOS=linux go build -o /main ./cmd/api/main.go
# --- Final image ---
# Use a minimal image for the final production container

FROM alpine:latest
# Set the working directory

WORKDIR /app
# Copy the application binary from the builder stage

COPY --from=builder /main .
# Copy necessary scripts and configuration files
# This assumes your Atlas and other scripts are in a 'scripts' directory

COPY --from=builder /app/scripts ./scripts
COPY --from=builder /app/supabase/config.toml ./config.toml
COPY --from=builder /app/migrations ./migrations
# Expose the port your application listens on

EXPOSE 8080
# Command to run the application

CMD ["./main"]
